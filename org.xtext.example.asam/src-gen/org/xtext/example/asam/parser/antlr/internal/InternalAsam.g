/*
 * generated by Xtext 2.33.0
 */
grammar InternalAsam;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.asam.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.asam.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.asam.services.AsamGrammarAccess;

}

@parser::members {

 	private AsamGrammarAccess grammarAccess;

    public InternalAsamParser(TokenStream input, AsamGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Sboot";
   	}

   	@Override
   	protected AsamGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSboot
entryRuleSboot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSbootRule()); }
	iv_ruleSboot=ruleSboot
	{ $current=$iv_ruleSboot.current; }
	EOF;

// Rule Sboot
ruleSboot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='project'
		{
			newLeafNode(otherlv_0, grammarAccess.getSbootAccess().getProjectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSbootAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSbootRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSbootAccess().getConfigurationConfigurationParserRuleCall_2_0());
				}
				lv_configuration_2_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSbootRule());
					}
					set(
						$current,
						"configuration",
						lv_configuration_2_0,
						"org.xtext.example.asam.Asam.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSbootAccess().getElementsElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSbootRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.asam.Asam.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getEntityParserRuleCall_0());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getServiceParserRuleCall_1());
		}
		this_Service_1=ruleService
		{
			$current = $this_Service_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getControllerParserRuleCall_2());
		}
		this_Controller_2=ruleController
		{
			$current = $this_Controller_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getDTOParserRuleCall_3());
		}
		this_DTO_3=ruleDTO
		{
			$current = $this_DTO_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getRepositoryParserRuleCall_4());
		}
		this_Repository_4=ruleRepository
		{
			$current = $this_Repository_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getServerServerInfoParserRuleCall_2_0());
				}
				lv_server_2_0=ruleServerInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					set(
						$current,
						"server",
						lv_server_2_0,
						"org.xtext.example.asam.Asam.ServerInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getDatabaseDatabaseInfoParserRuleCall_3_0());
				}
				lv_database_3_0=ruleDatabaseInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					set(
						$current,
						"database",
						lv_database_3_0,
						"org.xtext.example.asam.Asam.DatabaseInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleServerInfo
entryRuleServerInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServerInfoRule()); }
	iv_ruleServerInfo=ruleServerInfo
	{ $current=$iv_ruleServerInfo.current; }
	EOF;

// Rule ServerInfo
ruleServerInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='server'
		{
			newLeafNode(otherlv_0, grammarAccess.getServerInfoAccess().getServerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getServerInfoAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='port'
			{
				newLeafNode(otherlv_2, grammarAccess.getServerInfoAccess().getPortKeyword_2_0());
			}
			(
				(
					lv_port_3_0=RULE_INT
					{
						newLeafNode(lv_port_3_0, grammarAccess.getServerInfoAccess().getPortINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServerInfoRule());
						}
						setWithLastConsumed(
							$current,
							"port",
							lv_port_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_4='cpath'
			{
				newLeafNode(otherlv_4, grammarAccess.getServerInfoAccess().getCpathKeyword_3_0());
			}
			(
				(
					lv_path_5_0=RULE_PATH
					{
						newLeafNode(lv_path_5_0, grammarAccess.getServerInfoAccess().getPathPATHTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServerInfoRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_5_0,
							"org.xtext.example.asam.Asam.PATH");
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServerInfoAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDatabaseInfo
entryRuleDatabaseInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseInfoRule()); }
	iv_ruleDatabaseInfo=ruleDatabaseInfo
	{ $current=$iv_ruleDatabaseInfo.current; }
	EOF;

// Rule DatabaseInfo
ruleDatabaseInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='database'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseInfoAccess().getDatabaseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatabaseInfoAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='dbms'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatabaseInfoAccess().getDbmsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseInfoAccess().getTypeRDBMSEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleRDBMS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseInfoRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.asam.Asam.RDBMS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='dname'
		{
			newLeafNode(otherlv_4, grammarAccess.getDatabaseInfoAccess().getDnameKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getDatabaseInfoAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseInfoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='dport'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatabaseInfoAccess().getDportKeyword_6());
		}
		(
			(
				lv_port_7_0=RULE_INT
				{
					newLeafNode(lv_port_7_0, grammarAccess.getDatabaseInfoAccess().getPortINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseInfoRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='username'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatabaseInfoAccess().getUsernameKeyword_8());
		}
		(
			(
				lv_username_9_0=RULE_ID
				{
					newLeafNode(lv_username_9_0, grammarAccess.getDatabaseInfoAccess().getUsernameIDTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseInfoRule());
					}
					setWithLastConsumed(
						$current,
						"username",
						lv_username_9_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_10='password'
		{
			newLeafNode(otherlv_10, grammarAccess.getDatabaseInfoAccess().getPasswordKeyword_10());
		}
		(
			(
				lv_password_11_0=RULE_ID
				{
					newLeafNode(lv_password_11_0, grammarAccess.getDatabaseInfoAccess().getPasswordIDTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseInfoRule());
					}
					setWithLastConsumed(
						$current,
						"password",
						lv_password_11_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getDatabaseInfoAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='inherits'
			{
				newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getInheritsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_4_0());
				}
				lv_properties_5_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"properties",
						lv_properties_5_0,
						"org.xtext.example.asam.Asam.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDTO
entryRuleDTO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDTORule()); }
	iv_ruleDTO=ruleDTO
	{ $current=$iv_ruleDTO.current; }
	EOF;

// Rule DTO
ruleDTO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dto'
		{
			newLeafNode(otherlv_0, grammarAccess.getDTOAccess().getDtoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDTOAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDTORule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDTOAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDTOAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDTORule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.xtext.example.asam.Asam.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDTOAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='pertainingTo'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getPertainingToKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getEntityControllerCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getActionsServiceActionParserRuleCall_5_0());
				}
				lv_actions_5_0=ruleServiceAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"actions",
						lv_actions_5_0,
						"org.xtext.example.asam.Asam.ServiceAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='controller'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='mappingTo'
		{
			newLeafNode(otherlv_2, grammarAccess.getControllerAccess().getMappingToKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getControllerAccess().getEntityEntityCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				lv_baseUrl_5_0=RULE_STRING
				{
					newLeafNode(lv_baseUrl_5_0, grammarAccess.getControllerAccess().getBaseUrlSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"baseUrl",
						lv_baseUrl_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getActionsControllerActionParserRuleCall_6_0());
				}
				lv_actions_6_0=ruleControllerAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"actions",
						lv_actions_6_0,
						"org.xtext.example.asam.Asam.ControllerAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	iv_ruleRepository=ruleRepository
	{ $current=$iv_ruleRepository.current; }
	EOF;

// Rule Repository
ruleRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='repository'
		{
			newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getRepositoryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRepositoryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepositoryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='for'
		{
			newLeafNode(otherlv_2, grammarAccess.getRepositoryAccess().getForKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepositoryRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRepositoryAccess().getEntityEntityCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getRepositoryAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getMethodsRepositoryMethodParserRuleCall_5_0());
				}
				lv_methods_5_0=ruleRepositoryMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					add(
						$current,
						"methods",
						lv_methods_5_0,
						"org.xtext.example.asam.Asam.RepositoryMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRepositoryAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRepositoryMethod
entryRuleRepositoryMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryMethodRule()); }
	iv_ruleRepositoryMethod=ruleRepositoryMethod
	{ $current=$iv_ruleRepositoryMethod.current; }
	EOF;

// Rule RepositoryMethod
ruleRepositoryMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRepositoryMethodAccess().getFindByMethodParserRuleCall_0());
		}
		this_FindByMethod_0=ruleFindByMethod
		{
			$current = $this_FindByMethod_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRepositoryMethodAccess().getDeleteByMethodParserRuleCall_1());
		}
		this_DeleteByMethod_1=ruleDeleteByMethod
		{
			$current = $this_DeleteByMethod_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRepositoryMethodAccess().getCustomQueryMethodParserRuleCall_2());
		}
		this_CustomQueryMethod_2=ruleCustomQueryMethod
		{
			$current = $this_CustomQueryMethod_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFindByMethod
entryRuleFindByMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindByMethodRule()); }
	iv_ruleFindByMethod=ruleFindByMethod
	{ $current=$iv_ruleFindByMethod.current; }
	EOF;

// Rule FindByMethod
ruleFindByMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='find'
		{
			newLeafNode(otherlv_0, grammarAccess.getFindByMethodAccess().getFindKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindByMethodAccess().getByKeyword_1());
		}
		(
			(
				lv_property_2_0=RULE_ID
				{
					newLeafNode(lv_property_2_0, grammarAccess.getFindByMethodAccess().getPropertyIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"property",
						lv_property_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='And'
		{
			newLeafNode(otherlv_3, grammarAccess.getFindByMethodAccess().getAndKeyword_3());
		}
		(
			(
				lv_prop_4_0=RULE_ID
				{
					newLeafNode(lv_prop_4_0, grammarAccess.getFindByMethodAccess().getPropIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"prop",
						lv_prop_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDeleteByMethod
entryRuleDeleteByMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteByMethodRule()); }
	iv_ruleDeleteByMethod=ruleDeleteByMethod
	{ $current=$iv_ruleDeleteByMethod.current; }
	EOF;

// Rule DeleteByMethod
ruleDeleteByMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delete'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteByMethodAccess().getDeleteKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteByMethodAccess().getByKeyword_1());
		}
		(
			(
				lv_property_2_0=RULE_ID
				{
					newLeafNode(lv_property_2_0, grammarAccess.getDeleteByMethodAccess().getPropertyIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"property",
						lv_property_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='And'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeleteByMethodAccess().getAndKeyword_3());
		}
		(
			(
				lv_prop_4_0=RULE_ID
				{
					newLeafNode(lv_prop_4_0, grammarAccess.getDeleteByMethodAccess().getPropIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"prop",
						lv_prop_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCustomQueryMethod
entryRuleCustomQueryMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomQueryMethodRule()); }
	iv_ruleCustomQueryMethod=ruleCustomQueryMethod
	{ $current=$iv_ruleCustomQueryMethod.current; }
	EOF;

// Rule CustomQueryMethod
ruleCustomQueryMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='customQuery'
		{
			newLeafNode(otherlv_0, grammarAccess.getCustomQueryMethodAccess().getCustomQueryKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCustomQueryMethodAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_query_2_0=RULE_STRING
				{
					newLeafNode(lv_query_2_0, grammarAccess.getCustomQueryMethodAccess().getQuerySTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCustomQueryMethodRule());
					}
					setWithLastConsumed(
						$current,
						"query",
						lv_query_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCustomQueryMethodAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleServiceAction
entryRuleServiceAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceActionRule()); }
	iv_ruleServiceAction=ruleServiceAction
	{ $current=$iv_ruleServiceAction.current; }
	EOF;

// Rule ServiceAction
ruleServiceAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceActionAccess().getOperationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceActionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='returns'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceActionAccess().getReturnsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceActionAccess().getReturnTypeRTypeParserRuleCall_4_0());
				}
				lv_returnType_4_0=ruleRType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceActionRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_4_0,
						"org.xtext.example.asam.Asam.RType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='raises'
			{
				newLeafNode(otherlv_5, grammarAccess.getServiceActionAccess().getRaisesKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceActionAccess().getExceptionTypeTypeParserRuleCall_5_1_0());
					}
					lv_exceptionType_6_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceActionRule());
						}
						set(
							$current,
							"exceptionType",
							lv_exceptionType_6_0,
							"org.xtext.example.asam.Asam.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='implementation'
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceActionAccess().getImplementationKeyword_6_0());
			}
			(
				(
					lv_implementation_8_0=RULE_STRING
					{
						newLeafNode(lv_implementation_8_0, grammarAccess.getServiceActionAccess().getImplementationSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceActionRule());
						}
						setWithLastConsumed(
							$current,
							"implementation",
							lv_implementation_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_9='params'
		{
			newLeafNode(otherlv_9, grammarAccess.getServiceActionAccess().getParamsKeyword_7());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getServiceActionAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceActionAccess().getParametersActionParameterParserRuleCall_9_0());
				}
				lv_parameters_11_0=ruleActionParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_11_0,
						"org.xtext.example.asam.Asam.ActionParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getServiceActionAccess().getRightParenthesisKeyword_10());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getServiceActionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleControllerAction
entryRuleControllerAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerActionRule()); }
	iv_ruleControllerAction=ruleControllerAction
	{ $current=$iv_ruleControllerAction.current; }
	EOF;

// Rule ControllerAction
ruleControllerAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerActionAccess().getMethodHttpMethodsEnumRuleCall_0_0());
				}
				lv_method_0_0=ruleHttpMethods
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerActionRule());
					}
					set(
						$current,
						"method",
						lv_method_0_0,
						"org.xtext.example.asam.Asam.HttpMethods");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='action'
		{
			newLeafNode(otherlv_1, grammarAccess.getControllerActionAccess().getActionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getControllerActionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getControllerActionAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='linkedTo'
		{
			newLeafNode(otherlv_4, grammarAccess.getControllerActionAccess().getLinkedToKeyword_4());
		}
		(
			(
				lv_serviceAction_5_0=RULE_ID
				{
					newLeafNode(lv_serviceAction_5_0, grammarAccess.getControllerActionAccess().getServiceActionIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerActionRule());
					}
					setWithLastConsumed(
						$current,
						"serviceAction",
						lv_serviceAction_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_6='mappedAt'
			{
				newLeafNode(otherlv_6, grammarAccess.getControllerActionAccess().getMappedAtKeyword_6_0());
			}
			(
				(
					lv_url_7_0=RULE_STRING
					{
						newLeafNode(lv_url_7_0, grammarAccess.getControllerActionAccess().getUrlSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControllerActionRule());
						}
						setWithLastConsumed(
							$current,
							"url",
							lv_url_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerActionAccess().getParametersActionParameterParserRuleCall_7_0());
				}
				lv_parameters_8_0=ruleActionParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_8_0,
						"org.xtext.example.asam.Asam.ActionParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getControllerActionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleActionParameter
entryRuleActionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionParameterRule()); }
	iv_ruleActionParameter=ruleActionParameter
	{ $current=$iv_ruleActionParameter.current; }
	EOF;

// Rule ActionParameter
ruleActionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionParameterAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.asam.Asam.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionParameterAccess().getDefaultKeyword_3_0());
			}
			(
				(
					lv_defaultValue_4_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_4_0, grammarAccess.getActionParameterAccess().getDefaultValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionParameterRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.asam.Asam.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getDefaultKeyword_3_0());
			}
			(
				(
					lv_defaultValue_4_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_4_0, grammarAccess.getPropertyAccess().getDefaultValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getVtypesVTypesEnumRuleCall_0_0());
				}
				lv_Vtypes_0_0=ruleVTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"Vtypes",
						lv_Vtypes_0_0,
						"org.xtext.example.asam.Asam.VTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getListTypeParserRuleCall_1());
		}
		this_ListType_1=ruleListType
		{
			$current = $this_ListType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSetTypeParserRuleCall_2());
		}
		this_SetType_2=ruleSetType
		{
			$current = $this_SetType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRType
entryRuleRType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRTypeRule()); }
	iv_ruleRType=ruleRType
	{ $current=$iv_ruleRType.current; }
	EOF;

// Rule RType
ruleRType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRTypeAccess().getVypesVTypesEnumRuleCall_0_0());
				}
				lv_Vypes_0_0=ruleVTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRTypeRule());
					}
					set(
						$current,
						"Vypes",
						lv_Vypes_0_0,
						"org.xtext.example.asam.Asam.VTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getRTypeAccess().getListTypeParserRuleCall_1());
		}
		this_ListType_1=ruleListType
		{
			$current = $this_ListType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_2=RULE_ID
		{
			newLeafNode(this_ID_2, grammarAccess.getRTypeAccess().getIDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	iv_ruleListType=ruleListType
	{ $current=$iv_ruleListType.current; }
	EOF;

// Rule ListType
ruleListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='List<'
		{
			newLeafNode(otherlv_0, grammarAccess.getListTypeAccess().getListKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.asam.Asam.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleSetType
entryRuleSetType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTypeRule()); }
	iv_ruleSetType=ruleSetType
	{ $current=$iv_ruleSetType.current; }
	EOF;

// Rule SetType
ruleSetType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Set<'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetTypeAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.asam.Asam.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetTypeAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Rule VTypes
ruleVTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='float'
			{
				$current = grammarAccess.getVTypesAccess().getFLOATEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVTypesAccess().getFLOATEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='long'
			{
				$current = grammarAccess.getVTypesAccess().getLONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVTypesAccess().getLONGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='int'
			{
				$current = grammarAccess.getVTypesAccess().getINTEGEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVTypesAccess().getINTEGEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='char'
			{
				$current = grammarAccess.getVTypesAccess().getCHAREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVTypesAccess().getCHAREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='boolean'
			{
				$current = grammarAccess.getVTypesAccess().getBOOLEANEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVTypesAccess().getBOOLEANEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='byte'
			{
				$current = grammarAccess.getVTypesAccess().getBYTEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVTypesAccess().getBYTEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='String'
			{
				$current = grammarAccess.getVTypesAccess().getSTRINGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVTypesAccess().getSTRINGEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule HttpMethods
ruleHttpMethods returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Get'
			{
				$current = grammarAccess.getHttpMethodsAccess().getGETEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHttpMethodsAccess().getGETEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Delete'
			{
				$current = grammarAccess.getHttpMethodsAccess().getDELETEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHttpMethodsAccess().getDELETEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Post'
			{
				$current = grammarAccess.getHttpMethodsAccess().getPOSTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHttpMethodsAccess().getPOSTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Put'
			{
				$current = grammarAccess.getHttpMethodsAccess().getPUTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getHttpMethodsAccess().getPUTEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Patch'
			{
				$current = grammarAccess.getHttpMethodsAccess().getPATCHEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getHttpMethodsAccess().getPATCHEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule RDBMS
ruleRDBMS returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Mysql'
			{
				$current = grammarAccess.getRDBMSAccess().getMYSQLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRDBMSAccess().getMYSQLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Postgres'
			{
				$current = grammarAccess.getRDBMSAccess().getPOSTGRESEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRDBMSAccess().getPOSTGRESEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Mariadb'
			{
				$current = grammarAccess.getRDBMSAccess().getMARIADBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRDBMSAccess().getMARIADBEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='h2'
			{
				$current = grammarAccess.getRDBMSAccess().getH2EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRDBMSAccess().getH2EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Oracle'
			{
				$current = grammarAccess.getRDBMSAccess().getORACLEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRDBMSAccess().getORACLEEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_PATH : '/[a-zA-Z0-9_\\/-]+/';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
