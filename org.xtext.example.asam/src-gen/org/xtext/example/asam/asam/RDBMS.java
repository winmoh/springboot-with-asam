/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.asam.asam;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>RDBMS</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.example.asam.asam.AsamPackage#getRDBMS()
 * @model
 * @generated
 */
public enum RDBMS implements Enumerator
{
  /**
   * The '<em><b>MYSQL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MYSQL_VALUE
   * @generated
   * @ordered
   */
  MYSQL(0, "MYSQL", "Mysql"),

  /**
   * The '<em><b>POSTGRES</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POSTGRES_VALUE
   * @generated
   * @ordered
   */
  POSTGRES(1, "POSTGRES", "Postgres"),

  /**
   * The '<em><b>MARIADB</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MARIADB_VALUE
   * @generated
   * @ordered
   */
  MARIADB(2, "MARIADB", "Mariadb"),

  /**
   * The '<em><b>H2</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #H2_VALUE
   * @generated
   * @ordered
   */
  H2(3, "H2", "h2"),

  /**
   * The '<em><b>ORACLE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORACLE_VALUE
   * @generated
   * @ordered
   */
  ORACLE(4, "ORACLE", "Oracle");

  /**
   * The '<em><b>MYSQL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MYSQL
   * @model literal="Mysql"
   * @generated
   * @ordered
   */
  public static final int MYSQL_VALUE = 0;

  /**
   * The '<em><b>POSTGRES</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #POSTGRES
   * @model literal="Postgres"
   * @generated
   * @ordered
   */
  public static final int POSTGRES_VALUE = 1;

  /**
   * The '<em><b>MARIADB</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MARIADB
   * @model literal="Mariadb"
   * @generated
   * @ordered
   */
  public static final int MARIADB_VALUE = 2;

  /**
   * The '<em><b>H2</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #H2
   * @model literal="h2"
   * @generated
   * @ordered
   */
  public static final int H2_VALUE = 3;

  /**
   * The '<em><b>ORACLE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORACLE
   * @model literal="Oracle"
   * @generated
   * @ordered
   */
  public static final int ORACLE_VALUE = 4;

  /**
   * An array of all the '<em><b>RDBMS</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final RDBMS[] VALUES_ARRAY =
    new RDBMS[]
    {
      MYSQL,
      POSTGRES,
      MARIADB,
      H2,
      ORACLE,
    };

  /**
   * A public read-only list of all the '<em><b>RDBMS</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<RDBMS> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>RDBMS</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RDBMS get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RDBMS result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>RDBMS</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RDBMS getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RDBMS result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>RDBMS</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RDBMS get(int value)
  {
    switch (value)
    {
      case MYSQL_VALUE: return MYSQL;
      case POSTGRES_VALUE: return POSTGRES;
      case MARIADB_VALUE: return MARIADB;
      case H2_VALUE: return H2;
      case ORACLE_VALUE: return ORACLE;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private RDBMS(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //RDBMS
